- provide(:title, @organization.name )
- content_for :canonical_url,
              organization_url(section: @organization.canonical_section,
                               id: @organization.slug)
- location = @organization.location
- website = @organization.homepage
.wrapper-inner class="#{'no-location' unless location}"
  main.content-main.content-main--wide

    header.page-detail__header
      h2.page-detail__title= @organization.name

    .section-wrapper-major

      section.section-content.section-content--who
        h3.section-content__title
          = t '.who'
          == automation_warning(@organization.translation_automated?)
        .section-content__body.section-content--what
          == translation_block @organization.translation_automated? do
            == @organization.description
      - if @organization.offers.approved.any?
        section.section-content.section-content--alloffers
          h3.section-content__title
            = t '.offers_all'
            == automation_warning(@organization.translation_automated?)
          .section-content__body.section-content__body--offers-of-orga
            - SectionFilter.all.each do |section|

              - unless @organization.offers.approved.in_section(section.identifier).empty?
                h4.Listing-results__headline--world = t ".headline-offers--#{section.identifier}"

                ul.Listing-results__list class="Listing--#{section.identifier}"
                  - @organization.offers.approved.in_section(section.identifier).order('name ASC').each do |offer|
                    li.Listing-results__listitem

                      h5.Listing-results__offer.Listing-results__orga-display = link_to offer.name, offer_path(id: offer),
                              autotranslation_attr(@organization.translation_automated?)

                      .Listing-offers__address
                        .Listing-results__offerinfo.Listing-results__stamp
                          = offer.send("stamp_#{section.identifier}", @current_locale)
                        - if offer.location && offer.location.visible
                          .Listing-results__location
                            = offer.location_address



    .section-wrapper-minor

      - if location
        - cache [location, website, 'organization_show_text', I18n.locale] do
          - if location.visible || website
            section.section-content.section-content--where
              h3.section-content__title = t '.where'
              .section-content__body
                /! http://microformats.org/wiki/adr start
                .adr
                  p
                    - if location.visible
                      - if location.name?
                        span.org= location.name
                        br
                      - if location.addition?
                        span.extended-address= location.addition
                        br
                      span.street-address= location.street
                      br
                      span.postal-code=> location.zip
                      span.locality= location.city.name
                  - if website
                    br
                    = link_to website.shorten_url + website.pdf_appendix,
                      website.url, target: '_blank'

                /! http://microformats.org/wiki/adr end
                - if location.visible
                  br
                  - map_options = { \
                    scrollwheel: false,
                    mapTypeControl: false,
                    zoomControl: false,
                    streetViewControl: false,
                    draggableCursor: 'pointer'}
                  - ui_options = { autoenlarge: true }
                  #map-container.Map__small
                    #map-data[
                      data={ markers: @markers.to_json, options: map_options.to_json, ui: ui_options.to_json }]
                    #map-canvas.Map__small
                  #big-map
                    button.big-map_close X


      = link_to new_contact_path,
                class: 'offer-contribute js-report-overlay_open' do
        i.fa.fa-exclamation-triangle
        = t 'shareds.show.cta_report_errors'

      = modal_for 'js-report-overlay' do
        = render '/contacts/shared/new', contact: @contact, reporting: true

/ - content_for :view_specific_scripts do
/   = javascript_include_tag "gmaps_search_results.js"
